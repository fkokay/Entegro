@{
    ViewData["Title"] = "Varyantlar";
}

<div class="flex-grow-1 container-p-y container-fluid">
    <div class="d-flex flex-column justify-content-center">
        <h4 class="mb-3">@ViewData["Title"]</h4>
    </div>
    <div class="card">
        <div class="card-header border-bottom">
            <h5 class="card-title">Filtreler</h5>
            <div class="d-flex justify-content-between align-items-center row pt-4 gap-6 gap-md-0 g-md-6">
                <div class="col-md-4 productFilterBrand"></div>
            </div>
        </div>
        <div class="card-datatable">
            <table id="ProductAttributeTable" class="table">
                <thead class="border-top">
                    <tr>
                        <th></th>
                        <th></th>
                        <th>Adı</th>
                        <th>Görüntüleme Sırası</th>
                        <th></th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<!-- Product Attribute Modal -->
<div class="modal fade" id="createProductAttribute" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-simple modal-edit-user modal-dialog-centered">
        <div class="modal-content p-3 p-md-5">
            <div class="modal-body">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <div class="text-center mb-4">
                    <h3 class="mb-2">Yeni Product Attribute Kaydı</h3>
                </div>

                <!-- Form -->
                <form id="createProductAttributeForm" class="row g-3" onsubmit="return false;">
                    <!-- Name -->
                    <div class="col-12 mb-3">
                        <label class="form-label" for="Name">Ad <span class="text-danger">*</span></label>
                        <input type="text"
                               id="Name"
                               name="Name"
                               class="form-control"
                               placeholder="Örn: Renk" />
                    </div>

                    <!-- Description -->
                    <div class="col-12 mb-3">
                        <label class="form-label" for="Description">Açıklama</label>
                        <textarea id="Description"
                                  name="Description"
                                  class="form-control"
                                  rows="3"
                                  placeholder="Ürün attribute açıklaması (opsiyonel)"></textarea>
                    </div>

                    <!-- DisplayOrder -->
                    <div class="col-12 mb-3">
                        <label class="form-label" for="DisplayOrder">Gösterim Sırası <span class="text-danger">*</span></label>
                        <input type="number"
                               id="DisplayOrder"
                               name="DisplayOrder"
                               class="form-control"
                               placeholder="0" />
                    </div>

                    <!-- Buttons -->
                    <div class="col-12 text-center">
                        <button type="submit" class="btn btn-primary me-sm-3 me-1">Kaydet</button>
                        <button type="reset" class="btn btn-label-secondary" data-bs-dismiss="modal">Vazgeç</button>
                    </div>
                </form>
                <!-- /Form -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            // ===== DataTable =====
            $('#ProductAttributeTable').dataTable({
                language: {
                    paginate: {
                        next: '<i class="icon-base ti ti-chevron-right scaleX-n1-rtl icon-18px"></i>',
                        previous: '<i class="icon-base ti ti-chevron-left scaleX-n1-rtl icon-18px"></i>',
                        first: '<i class="icon-base ti ti-chevrons-left scaleX-n1-rtl icon-18px"></i>',
                        last: '<i class="icon-base ti ti-chevrons-right scaleX-n1-rtl icon-18px"></i>'
                    },
                    url: '//cdn.datatables.net/plug-ins/2.3.2/i18n/tr.json',
                },
                serverSide: true,
                ajax: {
                    url: '/ProductAttribute/ProductAttributeList',
                    type: 'POST',
                    contentType: 'application/json',
                    data: function (d) { return JSON.stringify(d); },
                },
                columns: [
                    { data: 'Id' },
                    { data: 'Id', orderable: false, render: DataTable.render.select() },
                    { data: 'Name' },
                    { data: 'DisplayOrder' },
                    { data: 'Id' },
                ],
                columnDefs: [
                    { className: "control", searchable: false, orderable: false, responsivePriority: 2, targets: 0, render: () => "" },
                    {
                        targets: 1, orderable: false, searchable: false, responsivePriority: 3,
                        checkboxes: { selectAllRender: '<input type="checkbox" class="form-check-input">' },
                        render: () => '<input type="checkbox" class="dt-checkboxes form-check-input">'
                    },
                    {
                        targets: -1, title: "İşlemler", searchable: false, orderable: false,
                        render: (data, type, row) => `
                            <div class="d-inline-block text-nowrap">
                                <a href="Edit?id=${row.Id}" class="btn btn-text-secondary rounded-pill waves-effect btn-icon">
                                    <i class="icon-base ti ti-pencil icon-22px"></i>
                                </a>
                                <button class="btn btn-text-secondary rounded-pill waves-effect btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                    <i class="icon-base ti ti-dots-vertical icon-22px"></i>
                                </button>
                                <div class="dropdown-menu dropdown-menu-end m-0">
                                    <a href="javascript:void(0);" class="dropdown-item">View</a>
                                    <a href="javascript:void(0);" class="dropdown-item">Suspend</a>
                                </div>
                            </div>`
                    }
                ],
                select: { style: "multi", selector: "td:nth-child(2)" },
                order: [3, "asc"],
                displayLength: 7,
                layout: {
                    topStart: {
                        rowClass: "card-header d-flex border-top rounded-0 flex-wrap py-0 flex-column flex-md-row align-items-start",
                        features: [{ search: { className: "me-5 ms-n4 pe-5 mb-n6 mb-md-0", placeholder: "Ara..", text: "_INPUT_" } }]
                    },
                    topEnd: {
                        rowClass: "row m-3 my-0 justify-content-between",
                        features: [{
                            pageLength: { menu: [7, 10, 25, 50, 100], text: "_MENU_" },
                            buttons: [
                                {
                                    extend: "collection",
                                    className: "btn btn-label-secondary dropdown-toggle me-4",
                                    text: `
                                        <span class="d-flex align-items-center gap-1">
                                            <i class="icon-base ti ti-upload icon-xs"></i>
                                            <span class="d-none d-sm-inline-block">Dışarı Aktar</span>
                                        </span>`,
                                    buttons: [
                                        { extend: "print", className: "dropdown-item", text: `<span class="d-flex align-items-center"><i class="icon-base ti tabler-printer me-1"></i> Print</span>`, exportOptions: { columns: [3,4,5,6,7] } },
                                        { extend: "csv",   className: "dropdown-item", text: `<span class="d-flex align-items-center"><i class="icon-base ti tabler-file me-1"></i> Csv</span>`,   exportOptions: { columns: [3,4,5,6,7] } },
                                        { extend: "excel", className: "dropdown-item", text: `<span class="d-flex align-items-center"><i class="icon-base ti tabler-upload me-1"></i> Excel</span>`, exportOptions: { columns: [3,4,5,6,7] } },
                                        { extend: "pdf",   className: "dropdown-item", text: `<span class="d-flex align-items-center"><i class="icon-base ti tabler-file-text me-1"></i> Pdf</span>`, exportOptions: { columns: [3,4,5,6,7] } },
                                        { extend: "copy",  className: "dropdown-item", text: `<i class="icon-base ti tabler-copy me-1"></i> Copy`,                                   exportOptions: { columns: [3,4,5,6,7] } }
                                    ]
                                },
                                // >>> Yeni Kayıt: modal aç <<<
                                {
                                    text: `
                                        <i class="icon-base ti ti-plus me-0 me-sm-1 icon-16px"></i>
                                        <span class="d-none d-sm-inline-block">Yeni Kayıt</span>`,
                                    className: "add-new btn btn-primary",
                                    action: function () {
                                        const $form = $('#createProductAttributeForm');
                                        if ($form.length) $form[0].reset();
                                        $('#createProductAttribute').find('h3.mb-2').text('Yeni Product Attribute Kaydı');
                                        if (window.editPAValidation) window.editPAValidation.resetForm(true);
                                        $('#createProductAttribute').modal('show');
                                    }
                                }
                            ]
                        }]
                    },
                    bottomStart: { rowClass: "row mx-3 justify-content-between", features: ["info"] },
                    bottomEnd: "paging"
                }
            });

            // ===== FormValidation: CreateProductAttributeViewModel =====
            (function () {
                const formEl = document.getElementById('createProductAttributeForm');
                if (!formEl) return;

                function focusFieldAndShowTab(el) {
                    try {
                        el.focus({ preventScroll: false });
                        const pane = el.closest('.tab-pane');
                        const tabId = pane?.getAttribute('id');
                        if (tabId) {
                            const trigger = document.querySelector(`[data-bs-target="#${tabId}"]`);
                            if (trigger) new bootstrap.Tab(trigger).show();
                        }
                    } catch (_) {}
                }

                window.editPAValidation = FormValidation.formValidation(formEl, {
                    locale: 'tr_TR',
                    localization: FormValidation.locales.tr_TR,
                    fields: {
                        Name: {
                            validators: {
                                notEmpty: { message: 'Ad alanı boş bırakılamaz.' },
                                stringLength: { min: 3, max: 100, message: 'Ad 3–100 karakter olmalıdır.' }
                            }
                        },
                        Description: {
                            validators: {
                                stringLength: { max: 1000, message: 'Açıklama en fazla 1000 karakter olabilir.' }
                            }
                        },
                        DisplayOrder: {
                            validators: {
                                notEmpty:   { message: 'Gösterim sırası boş bırakılamaz.' },
                                integer:    { message: 'Gösterim sırası tam sayı olmalıdır.' },
                                greaterThan:{ inclusive: true, min: 0, message: '0 veya daha büyük olmalıdır.' }
                            }
                        }
                    },
                    plugins: {
                        trigger:    new FormValidation.plugins.Trigger(),
                        bootstrap5: new FormValidation.plugins.Bootstrap5({ eleValidClass: '', rowSelector: '.mb-3' }),
                        submitButton: new FormValidation.plugins.SubmitButton(),
                        autoFocus:    new FormValidation.plugins.AutoFocus()
                    },
                    init: (instance) => {
                        instance.on('plugins.message.placed', function (e) {
                            if (e.element.parentElement.classList.contains('input-group')) {
                                e.element.parentElement.insertAdjacentElement('afterend', e.messageElement);
                            }
                        });
                        instance.on('core.field.invalid', function (e) {
                            const fieldEl = e.elements && e.elements.length ? e.elements[0] : null;
                            if (fieldEl) focusFieldAndShowTab(fieldEl);
                        });
                        instance.on('core.form.invalid', function () {
                            const invalidEl = document.querySelector('[data-field].is-invalid, .is-invalid');
                            if (invalidEl) focusFieldAndShowTab(invalidEl);
                        });

                        // >>> Valid olduğunda POST et, başarıda mesaj & Liste'ye yönlendir
                        instance.on('core.form.valid', function () {
                            const $form = $('#createProductAttributeForm');
                            const serializedData = $form.serialize();

                            $.ajax({
                                url: '/ProductAttribute/Create',
                                type: 'POST',
                                data: serializedData,
                                success: function (response) {
                                    if (response && response.success) {
                                        Swal.fire({
                                            title: 'Başarılı!',
                                            text: 'Kayıt başarıyla eklendi.',
                                            icon: 'success',
                                            confirmButtonText: 'Tamam',
                                            customClass: { confirmButton: 'btn btn-success' },
                                            buttonsStyling: false
                                        }).then(() => {
                                            window.location.href = '/ProductAttribute/List';
                                        });
                                    } else {
                                        Swal.fire({
                                            title: 'Hata!',
                                            text: (response && response.message) || 'Bir hata oluştu.',
                                            icon: 'error',
                                            confirmButtonText: 'Tamam',
                                            customClass: { confirmButton: 'btn btn-danger' },
                                            buttonsStyling: false
                                        });
                                    }
                                },
                                error: function (xhr) {
                                    Swal.fire({
                                        title: 'Hata!',
                                        text: xhr.responseText || 'İşlem sırasında bir hata oluştu.',
                                        icon: 'error',
                                        confirmButtonText: 'Tamam',
                                        customClass: { confirmButton: 'btn btn-danger' },
                                        buttonsStyling: false
                                    });
                                }
                            });
                        });
                    }
                });
            })();
        });
    </script>
}
