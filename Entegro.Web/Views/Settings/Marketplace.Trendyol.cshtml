@model TrendyolMarketplaceSettingsViewModel
@{
    ViewData["Title"] = "Trendyol Pazaryeri Entegrasyonu Ayarları";
}

<form asp-action="MarketplaceParameterTrendyol" id="marketplace-setting-trendyol-form">
    @Html.HiddenFor(m => m.IntegrationSystemId)
    @Html.HiddenFor(m => m.CommerceType)
    <div class="flex-grow-1 container-p-y container-fluid">
        <div class="d-flex flex-column justify-content-center">
            <h4 class="mb-3">@ViewData["Title"]</h4>
        </div>
        <div class="row">
            <div class="col-lg-9 col-12 mb-lg-0 mb-4">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Pazaryeri Entegrasyon Ayarları</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-6">
                            <label class="form-label" for="basic-default-fullname">API Kullanıcı Adı</label>
                            @Html.TextBoxFor(m => m.ApiUser, new { @class = "form-control" })
                        </div>
                        <div class="mb-6">
                            <label class="form-label" for="basic-default-fullname">API Şifre </label>
                            @Html.TextBoxFor(m => m.ApiPassword, new { @class = "form-control" })
                        </div>
                        <div class="mb-6">
                            <label class="form-label" for="basic-default-fullname">Tedarikçi Id (SupplierId)</label>
                            @Html.TextBoxFor(m => m.SupplierId, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-12 marketplace-setting-trendyol-actions">
                <div class="card mb-4">
                    <div class="card-body">
                        <button type="submit" class="btn btn-primary d-grid w-100 mb-2 waves-effect waves-light">
                            <span class="d-flex align-items-center justify-content-center text-nowrap"><i class="ti ti-check ti-xs me-1"></i>Kaydet</span>
                        </button>
                        <a href="/settings/marketplace" class="btn btn-label-secondary d-grid w-100 waves-effect">İptal Et</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<script>
    function iptalEt(integrationSystemId) {
        Swal.fire({
            title: 'Emin misiniz?',
            text: "Bu entegrasyonu iptal etmek üzeresiniz!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Evet',
            cancelButtonText: 'Vazgeç'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch('/settings/ECommerceDelete', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(integrationSystemId)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: 'İptal Edildi!',
                            text: 'Bu entegrasyonu başarıyla iptal edildi.',
                            icon: 'success',
                            timer: 1500,
                            showConfirmButton: false
                        }).then(() => {
                            window.location.href = '/settings/marketplace';
                        });
                    } else {
                        Swal.fire('Hata!', data.message || 'Bir hata oluştu.', 'error');
                    }
                })
                .catch(() => Swal.fire('Hata!', 'Sunucuya bağlanırken hata oluştu.', 'error'));
            }
        });
    }
</script>


