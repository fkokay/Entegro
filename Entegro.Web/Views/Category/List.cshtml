@{
    ViewData["Title"] = "Kategoriler";
}

<div class="flex-grow-1 container-p-y container-fluid">
    <div class="card">
        <div class="row card-header flex-column flex-md-row border-bottom mx-0 px-3">
            <div class="d-md-flex justify-content-between align-items-center dt-layout-start col-md-auto me-auto mt-0">
                <h5 class="card-title mb-0 text-md-start text-center pb-md-0 pb-6">Kategoriler</h5>
            </div>
            <div class="d-md-flex justify-content-between align-items-center dt-layout-end col-md-auto ms-auto mt-0">
                <div class="dt-buttons btn-group flex-wrap mb-0">
                    <div class="btn-group">
                        <button class="btn buttons-collection btn-label-primary dropdown-toggle me-4" tabindex="0" aria-controls="DataTables_Table_0" type="button" aria-haspopup="dialog" aria-expanded="false">
                            <span>
                                <span class="d-flex align-items-center gap-2">
                                    <i class="icon-base ti tabler-upload icon-xs me-sm-1"></i>
                                    <span class="d-none d-sm-inline-block">Dışarı Aktar</span>
                                </span>
                            </span>
                        </button>
                    </div>
                    <a asp-action="Create" class="btn create-new btn-primary" tabindex="0">
                        <span>
                            <span class="d-flex align-items-center gap-2">
                                <i class="icon-base ti tabler-plus icon-sm"></i>
                                <span class="d-none d-sm-inline-block">Yeni Kayıt Ekle</span>
                            </span>
                        </span>
                    </a>
                </div>
            </div>
        </div>
        <div class="card-datatable table-responsive">
            <table id="CategoryTable" class="dt-fixedheader table table-bordered dataTable dtr-column">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Id</th>
                        <th>Kategori adı</th>
                        <th>Görüntüleme sırası</th>
                        <th>Kayıt tarihi</th>
                        <th></th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        $(function () {
            var table = $('#CategoryTable').DataTable({
                language: {
                    url: '//cdn.datatables.net/plug-ins/2.3.2/i18n/tr.json',
                },
                serverSide: true,
                order: [[2, 'asc']],
                ajax: {
                    url: '/Category/CategoryList',
                    type: 'POST',
                    contentType: 'application/json',
                    data: function (d) {
                        return JSON.stringify(d);
                    },
                },
                columns: [
                    { data: null },
                    { data: 'Id' },
                    { data: 'Name' },
                    { data: 'DisplayOrder' },
                    {
                        data: 'CreatedOn',
                        render: function (data, type) {
                            if (type === "sort" || type === "type") {
                                return data;
                            }
                            return moment(data).format("DD.MM.yyyy HH:mm");
                        }
                    },
                    { data: null }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        searchable: false,
                        orderable: false,
                        render: function () {
                            return '<input type="checkbox" class="dt-checkboxes form-check-input">';
                        },
                        checkboxes: {
                            selectAllRender: '<input type="checkbox" class="form-check-input">'
                        },
                        responsivePriority: 4
                    },
                    {
                        targets: -1,
                        title: 'İşlemler',
                        searchable: false,
                        orderable: false,
                        render: function (data, type, full) {
                            return (
                                '<div class="d-inline-block">' +
                                '<a href="javascript:;" class="btn btn-sm btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown">' +
                                '<i class="text-dark ti ti-dots-vertical"></i></a>' +
                                '<div class="dropdown-menu dropdown-menu-end m-0">' +
                                '<a href="javascript:;" class="dropdown-item">Detaylar</a>' +
                                '<a href="javascript:;" class="dropdown-item">Arşiv</a>' +
                                '<div class="dropdown-divider"></div>' +
                                `<a href="javascript:;" class="dropdown-item text-danger delete-record" data-id="${full.Id}">Kategori Sil</a>` +
                                '</div>' +
                                '</div>' +
                                `<a href="Edit?id=${full.Id}" class="btn btn-sm btn-icon item-edit">` +
                                '<i class="text-dark ti ti-pencil"></i></a>'
                            );
                        }
                    }
                ],
                dom: '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end"f>>' +
                     '<"table-responsive"t>' +
                     '<"row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>'
            });

            // Satır silme butonuna tıklanınca radiobuttonlu SweetAlert açılır
            $(document).on('click', '.delete-record', function () {
                var categoryId = $(this).data('id');

                Swal.fire({
                    title: 'Silme Türünü Seçin',
                    html: `
                        <div style="text-align: left">
                            <label><input type="radio" name="delete-option" value="0" checked> Sadece bağlantıyı kaldır</label><br>
                            <label><input type="radio" name="delete-option" value="1"> Bağlantı ve alt kategorileri sil</label>
                        </div>
                    `,
                    showCancelButton: true,
                    confirmButtonText: 'Devam Et',
                    cancelButtonText: 'İptal',
                    customClass: {
                        confirmButton: 'btn btn-danger me-3',
                        cancelButton: 'btn btn-secondary'
                    },
                    buttonsStyling: false,
                    preConfirm: () => {
                        const selected = document.querySelector('input[name="delete-option"]:checked');
                        if (!selected) {
                            Swal.showValidationMessage('Lütfen bir seçenek seçin.');
                            return false;
                        }
                        return selected.value;
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        const chooseType = parseInt(result.value);

                        $.ajax({
                            url: '@Url.Action("Delete", "Category")',
                            type: 'POST',
                            data: {
                                id: categoryId,
                                chooseType: chooseType
                            },
                            success: function (response) {
                                if (response.success) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Silindi!',
                                        text: 'Kategori başarıyla silindi.',
                                        confirmButtonText: 'Tamam',
                                        customClass: {
                                            confirmButton: 'btn btn-success'
                                        },
                                        buttonsStyling: false
                                    }).then(() => {
                                        table.ajax.reload();
                                    });
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Hata!',
                                        text: response.message || 'Silme işlemi başarısız oldu.',
                                        confirmButtonText: 'Tamam',
                                        customClass: {
                                            confirmButton: 'btn btn-danger'
                                        },
                                        buttonsStyling: false
                                    });
                                }
                            },
                            error: function () {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Sunucu Hatası!',
                                    text: 'İstek gönderilirken bir hata oluştu.',
                                    confirmButtonText: 'Tamam',
                                    customClass: {
                                        confirmButton: 'btn btn-danger'
                                    },
                                    buttonsStyling: false
                                });
                            }
                        });
                    }
                });
            });
        });
    </script>



}
